name: Solar System Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:

    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20

        - name: Cache NPM dependencies
          uses: actions/cache@v4
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

        - name: Install Dependencies
          run: npm install

        - name: Unit Testing
          run: npm test

        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:

        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20

        - run: ls -1a

        - name: Cache NPM dependencies
          uses: actions/cache@v4
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

        - name: Install Dependencies
          run: npm install

        - name: Run coverage
          continue-on-error: true
          run: npm run coverage
          # prevent job from failing when this step fails.

        - name: Archive Coverage Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Code-Coverage-Results
            path: coverage
            retention-days: 5

    docker:
      name: Containerization
      runs-on: ubuntu-latest
      needs:
        - unit-testing
        - code-coverage
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Dockerhub Login
          uses: docker/login-action@v2.2.0
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}

        - name: GHCR Login
          uses: docker/login-action@v2.2.0
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Docker Build for Testing
          uses: docker/build-push-action@v6.15.0
          with:
            context: .
            push: false
            tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
            # the dockerfile has env vars with dummy values, be sure to replace them

        - name: Docker Image Testing
          run: |
            set -x
            docker images
            docker run \
              --name solar-system-app \
              --detach \
              -p 3000:3000 \
              -e MONGO_URI=$MONGO_URI \
              -e MONGO_USERNAME=$MONGO_USERNAME \
              -e MONGO_PASSWORD=$MONGO_PASSWORD \
              ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

            export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
            echo "$IP"

            echo Testing images URL using wget
            wget -q -O - 127.0.0.1:3000/live | grep live

        - name: Container Registry Push to GHCR
          uses: docker/build-push-action@v6.15.0
          with:
            context: .
            push: true
            tags: ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}

        - name: Container Registry Push to DockerHub
          uses: docker/build-push-action@v6.15.0
          with:
            context: .
            push: true
            tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
